- name: Prepare Nodes for K8s Cluster
  hosts: all
  become: true
  tasks:
    - name: Update hostname
      ansible.builtin.hostname:
        name: "{{ new_hostname }}"
      when: new_hostname is defined

    - name: Update /etc/hosts with new hostname
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.1\.1\s+.*'
        line: '127.0.1.1 {{ new_hostname }}'
        state: present
      when: new_hostname is defined

    - name: Install required packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - curl
        - apt-transport-https
        - gnupg2
        - software-properties-common
        - ca-certificates

    - name: Import Kubernetes GPG Key
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        executable: /bin/bash
      changed_when: false

    - name: Add Kubernetes Repository
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' \
          | sudo tee /etc/apt/sources.list.d/kubernetes.list
        executable: /bin/bash
      changed_when: false

    - name: Install kubelet, kubeadm and kubectl
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Hold kubelet, kubeadm and kubectl
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Disable swap
      ansible.builtin.command: swapoff -a
      when: ansible_swaptotal_mb > 0
      register: my_output
      changed_when: my_output.rc != 0

    - name: Disable swap on fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^\/swap.img'
        state: absent

    - name: Load required kernel module
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - br_netfilter
        - overlay

    - name: Set required sysctl params
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: '1'
        state: present
        reload: true
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward

    - name: Add Docker GPG apt Key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      ansible.builtin.apt_repository:
        repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install containerd
      ansible.builtin.apt:
        name: containerd
        state: present
        update_cache: true

    - name: Create containerd configuration directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Generate default containerd configuration
      ansible.builtin.shell:
        cmd: set -o pipefail && containerd config default | sudo tee /etc/containerd/config.toml
        executable: /bin/bash
      changed_when: false

    - name: Update Cgroup configuration in containerd
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: '(SystemdCgroup = false)'
        replace: 'SystemdCgroup = true'

    - name: Restart containerd to apply configuration
      ansible.builtin.systemd_service:
        name: containerd
        state: restarted
        enabled: true
        daemon_reload: true

    - name: Enable kubelet service to start on boot
      ansible.builtin.systemd_service:
        name: kubelet
        enabled: true
